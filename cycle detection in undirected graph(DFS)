#include <iostream>
using namespace std;

// cycle detection in undirected graph(DFS)

bool detect(int node, int parent, vector<int> adj, vis){
    vis[node]=1;
    for(auto x:adj[node]){
        if (!vis[x]){
            if (dfs(x, adj, vis)==true) return true;
        }
        else if(x!=parent) return true;
    }
    return false;
}

bool isCycle(int v, vector<int> adj){
    vector<int> vis(v, 0);
    for(int i=0;i<v;i++){
        if (!vis[i]){
            if (dfs(i, -1, adj, vis)==true) return true;
        };
    }
    return false;
}

